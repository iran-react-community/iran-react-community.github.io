{"version":3,"sources":["webpack:///./src/theme.js","webpack:///./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack:///./src/pages/index.js"],"names":["theme","createMuiTheme","typography","subtitle1","textAlign","body2","fontSize","palette","primary","background","backgroundLight","main","secondary","light","error","red","A400","default","props","children","localTheme","outerTheme","useTheme","useMemo","output","mergeOuterLocalTheme","nested","createElement","ThemeContext","Provider","value","Index","App"],"mappings":"sIAiCeA,EA7BDC,YAAe,CAC3BC,WAAY,CACVC,UAAW,CACTC,UAAW,UAEbC,MAAO,CACLD,UAAW,UAEbE,SAAU,IAEZC,QAAS,CACPC,QAAS,CACPC,WAAY,UACZC,gBAAiB,UACjBC,KAAM,WAERC,UAAW,CACTC,MAAM,UACNF,KAAM,WAERG,MAAO,CACLH,KAAMI,IAAIC,MAEZP,WAAY,CACVQ,QAAS,W,gDCgCA,MAnCf,SAAuBC,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAaF,EAAMlB,MACnBqB,EAAa,OAAAC,EAAA,KAEbtB,EAAQ,IAAMuB,SAAQ,WACxB,IAAIC,EAAwB,OAAfH,EAAsBD,EAtBvC,SAA8BC,EAAYD,GACxC,MAA0B,mBAAfA,EACSA,EAAWC,GAKxB,YAAS,GAAIA,EAAY,GAAID,GAecK,CAAqBJ,EAAYD,GAMjF,OAJc,MAAVI,IACFA,EAAOE,EAAA,GAAyB,OAAfL,GAGZG,IACN,CAACJ,EAAYC,IAChB,OAAO,IAAMM,cAAcC,EAAA,EAAaC,SAAU,CAChDC,MAAO9B,GACNmB,I,SCpCU,SAASY,IAEtB,OAAQ,kBAAC,EAAD,CAAe/B,MAAOA,GAC5B,kBAACgC,EAAA,QAAD,OARJ","file":"component---src-pages-index-js-6f0d8ffaad2fc4e998d5.js","sourcesContent":["import {red} from '@material-ui/core/colors';\nimport {createMuiTheme} from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  typography: {\n    subtitle1: {\n      textAlign: 'center'\n    },\n    body2: {\n      textAlign: 'center'\n    },\n    fontSize: 13\n  },\n  palette: {\n    primary: {\n      background: '#565656',\n      backgroundLight: '#9e9e9e',\n      main: '#05E5E5'\n    },\n    secondary: {\n      light:\"#ffffff\",\n      main: '#19857b'\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: '#fff'\n    }\n  }\n});\n\nexport default theme;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'warning';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n    process.env.NODE_ENV !== \"production\" ? warning(mergedTheme, ['Material-UI: you should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n')) : void 0;\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, {}, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n  process.env.NODE_ENV !== \"production\" ? warning(outerTheme !== null || typeof localTheme !== 'function', ['Material-UI: you are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n')) : void 0;\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","import React from 'react';\nimport theme from \"../theme\"\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from \"./App\"\n\nexport default function Index() {\n\n  return (<ThemeProvider theme={theme}>\n    <App/>\n  </ThemeProvider>);\n}\n"],"sourceRoot":""}